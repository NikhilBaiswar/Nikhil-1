{"version":3,"sources":["components/Movies.js","components/Search.js","App.js","reportWebVitals.js","index.js"],"names":["movies","props","Title","Poster","className","src","alt","id","Search","onSearchValue","useState","searchValue","setSearchValue","placeholder","value","onChange","e","target","type","onClick","console","log","App","handleSearch","filteredValues","state","orgMovies","filter","item","toLowerCase","includes","setState","title","axios","get","then","res","data","this","map","index","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qQAGe,SAASA,EAAOC,GAC7B,IAAQC,EAAkBD,EAAlBC,MAAOC,EAAWF,EAAXE,OACf,OACE,sBAAKC,UAAU,gBAAf,UACE,qBAAKC,IAAKF,EAAQG,IAAKJ,IACvB,qBAAKK,GAAG,cAAR,SAAuBL,MAFWA,G,YCJzB,SAASM,EAAT,GAAoC,IAAlBC,EAAiB,EAAjBA,cAC/B,EAAsCC,mBAAS,IAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KAMA,OACE,iCACE,uBACEL,GAAG,aACHM,YAAY,yBACZC,MAAOH,EACPI,SAAU,SAACC,GACTJ,EAAeI,EAAEC,OAAOH,UAG5B,wBAAQI,KAAK,SAASX,GAAG,UAAUY,QAdtB,WACfC,QAAQC,IAAIV,GACZF,EAAcE,IAYZ,SACE,mBAAGP,UAAU,uBCdd,IA0CQkB,EA1Cf,kDACE,WAAYrB,GAAQ,IAAD,8BACjB,cAAMA,IAiBRsB,aAAe,SAACT,GACdM,QAAQC,IAAIP,GACZ,IAAMU,EAAiB,EAAKC,MAAMC,UAAUC,QAAO,SAACC,GAAD,OACjDA,EAAK1B,MAAM2B,cAAcC,SAAShB,EAAMe,kBAE1CT,QAAQC,IAAIG,GACZ,EAAKO,SAAS,CAAE/B,OAAQwB,KArBxB,EAAKC,MAAQ,CACXzB,OAAQ,GACRgC,MAAO,GACPN,UAAW,IANI,EADrB,qDAUE,WAAqB,IAAD,OAClBO,IAAMC,IAAI,kDAAkDC,MAAK,SAACC,GAChE,EAAKL,SAAS,CACZ/B,OAAQoC,EAAIC,KAAK7B,OACjBwB,MAAOI,EAAIC,KAAK7B,OAAON,MACvBwB,UAAWU,EAAIC,KAAK7B,cAf5B,oBA4BE,WACE,OACE,gCACE,cAACA,EAAD,CAAQC,cAAe6B,KAAKf,eAC5B,qBAAKhB,GAAG,iBAAR,SACG+B,KAAKb,MAAMzB,OAAOuC,KAAI,SAACX,EAAMY,GAAP,OACrB,cAAC,EAAD,eAAwBZ,GAAXY,eAlCzB,GAAyBC,aCMVC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBT,MAAK,YAAkD,IAA/CU,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.58c9117e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"../App.css\";\r\n\r\nexport default function movies(props) {\r\n  const { Title, Poster } = props;\r\n  return (\r\n    <div className=\"movies-poster\" key={Title}>\r\n      <img src={Poster} alt={Title} />\r\n      <div id=\"movie-title\">{Title}</div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function Search({ onSearchValue }) {\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n\r\n  const onSearch = () => {\r\n    console.log(searchValue);\r\n    onSearchValue(searchValue);\r\n  };\r\n  return (\r\n    <form>\r\n      <input\r\n        id=\"search-box\"\r\n        placeholder=\"Search for Movie title\"\r\n        value={searchValue}\r\n        onChange={(e) => {\r\n          setSearchValue(e.target.value);\r\n        }}\r\n      />\r\n      <button type=\"button\" id=\"sub-btn\" onClick={onSearch}>\r\n        <i className=\"fas fa-search\"></i>\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport axios from \"axios\";\nimport Movies from \"./components/Movies\";\nimport Search from \"./components/Search\";\n\nexport class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      movies: [],\n      title: \"\",\n      orgMovies: [],\n    };\n  }\n  componentDidMount() {\n    axios.get(\"https://www.omdbapi.com/?apikey=45f0782a&s=war\").then((res) => {\n      this.setState({\n        movies: res.data.Search,\n        title: res.data.Search.Title,\n        orgMovies: res.data.Search,\n      });\n    });\n  }\n  handleSearch = (value) => {\n    console.log(value);\n    const filteredValues = this.state.orgMovies.filter((item) =>\n      item.Title.toLowerCase().includes(value.toLowerCase())\n    );\n    console.log(filteredValues);\n    this.setState({ movies: filteredValues });\n  };\n\n  render() {\n    return (\n      <div>\n        <Search onSearchValue={this.handleSearch} />\n        <div id=\"movies-wrapper\">\n          {this.state.movies.map((item, index) => (\n            <Movies key={index} {...item} />\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}